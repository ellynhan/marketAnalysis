<!DOCTYPE html>
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4" crossorigin="anonymous"></script>
    <!-- 비동기호출 -->
    <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=3go24950yq&callback=CALLBACK_FUNCTION"></script>
    <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=3go24950yq&submodules=geocoder"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="/stylesheets/style.css">

</head>

<nav class="navbar fixed-top border-bottom" style="background-color: #ffffff; border-color: #eeeeee;">
    <div class="col-lg-4">
        <a class="navbar-brand" href="/" ></a>
    </div>
    <div class="col-lg-4 d-flex justify-content-center">
        <a class="navbar-brand" href="/">
            <div style="color: #b1b1b1;">
                ✨ Y polaris <strong style="color:black">무인 점포 상권 분석</strong>
            </div>
        </a>
    </div>
    <div class="col-lg-4"></div>
</nav>

<body>
    <div id="map" style="width:100%;height:100vh;"></div>

    <div class="row" id="query-box">
        <div class="mb-3">
            <label for ="loc" class="form-label">위치</label>
            <input type="text" class="form-control" id="address" name="loc" onkeydown="initGeocoder(0);" placeholder="구/읍/면/동" required>
        </div>
        <div class="row">
            <div class="mb-3">
                <select class="form-select" aria-label="d" id="select_kind" name ="select" required>
                    <option selected>업종</option>
                    <option value="1">편의점</option>
                    <option value="2">대형마트</option>
                    <option value="3">기타 슈퍼마켓</option>
                </select>
            </div>
        </div> 
        <div class="gap-2 d-grid d-md-flex justify-content-md-end">
            <button class="btn btn-warning btn-sm" id="submit" type="submit" onclick="initGeocoder(1);">
                검색하기
            </button>
        </div>
    </div>

    <div id="result-box">
        <div class='row'>
            <div class="gap-2 d-grid d-md-flex justify-content-md-start">
                <button class="btn btn-warning" onclick="closeInfo()">
                    닫기
                </button>
            </div>
        </div>
        <div class='row'>
            <div class="gap-2 d-grid d-md-flex justify-content-md-center">
                <h3 id="result-address"></h3>
            </div>
        </div>
        <div id='chart-box' class='row'>
            <canvas id="myChart"></canvas>
        </div>
        <div id='progress-box' class='row'>
            <div class="progress">
                <div class="progress-bar bg-danger" role="progressbar" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">나쁨</div>
                <div class="progress-bar bg-warning" role="progressbar" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">고려</div>
                <div class="progress-bar bg-success" role="progressbar" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">양호</div>
                <div class="progress-bar " role="progressbar" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">좋음</div>
              </div>
        </div>
        <div id='triangle-marker-box' class='row'>
            <p id='triangle-marker'>▲</p>
        </div>
        <div class='row'>
            <div class="gap-2 d-grid d-md-flex justify-content-md-center">
                <h3 id='result-score'></h3>
            </div>
        </div>
    </div>
    <p id="score-data"><%= scores %></p>
    <p id='detail-data'><%= JSON.stringify(details) %></p>
</body>


<script id="naver-map-code">
    var map = new naver.maps.Map("map", {
        center: new naver.maps.LatLng(35.1484309,129.063211),
        zoom: 15,
        mapTypeControl: true
    });
    
    var infoWindow = new naver.maps.InfoWindow({
        anchorSkew: true
    });
    map.setCursor('pointer');
    
    var myChart = new Chart(
                document.getElementById('myChart'),
                {
                type: 'radar',
                data: {},
                options: {}
                }
            );
    function searchCoordinateToAddress(latlng) {
        console.log("reverse geocode");
        infoWindow.close();
    
        naver.maps.Service.reverseGeocode({
            coords: latlng,
            orders: [
                naver.maps.Service.OrderType.ADDR,
                naver.maps.Service.OrderType.ROAD_ADDR
            ].join(',')
        }, function(status, response) {
            if (status === naver.maps.Service.Status.ERROR) {
                return alert('Something Wrong!');
            }
    
            var items = response.v2.results,
                address = '',
                htmlAddresses = [];
    
            for (var i=0, ii=items.length, item, addrType; i<ii; i++) {
                item = items[i];
                address = makeAddress(item) || '';
                addrType = item.name === 'roadaddr' ? '[도로명 주소]' : '[지번 주소]';
    
                htmlAddresses.push((i+1) +'. '+ addrType +' '+ address);
            }
    
            infoWindow.setContent([
                '<div style="padding:10px;min-width:200px;line-height:150%;">',
                '<h4 style="margin-top:5px;">검색 좌표</h4><br />',
                htmlAddresses.join('<br />'),
                '</div>'
            ].join('\n'));
    
            infoWindow.open(map, latlng);
        });
    }
    
    function searchAddressToCoordinate(address) { //geocode & actually everything.
        console.log("geocode")
        naver.maps.Service.geocode({
            query: address
        }, function(status, response) {
            if (status === naver.maps.Service.Status.ERROR) {
                return alert('Something Wrong!');
            }
    
            if (response.v2.meta.totalCount === 0) { //검색결과 없으면 결과창 안뜨도록 함.
                return alert("검색 결과가 없습니다.");
            }else{
                var info = document.getElementById('result-box');
                info.style.visibility="visible";
            }
    
            if (response.v2.meta.totalCount > 1) { //검색결과가 많음. 결과표시 안함.
                return alert("검색 결과가 많습니다. 더 자세한 주소를 입력해주세요.");
            }

            var htmlAddresses = [],
                item = response.v2.addresses[0],
                point = new naver.maps.Point(item.x, item.y);
            
            var addressArray = item.jibunAddress.split(' ');
            var result;
            var gu;
            var epMyeonDong;
            if(addressArray.length==1){
                return alert("검색 범위가 넓습니다. 더 자세한 주소를 입력해주세요.");
            }else if(addressArray.length>1){
                result = addressArray[0]+" "+addressArray[1];
                epMyeonDong = addressArray[1];
                gu = addressArray[1];
                if(addressArray.length>2){
                    result = result + " " +addressArray[2];
                    epMyeonDong = addressArray[2];
                    if(addressArray.length>3){
                        if(addressArray[3][0]<'0'||addressArray[3][0]>'9'){
                            result = result+" "+addressArray[3];
                        }else{
                            epMyeonDong = addressArray[3];
                        }
                    }
                }
            }
            var resultText = document.getElementById("result-address");
            resultText.innerText = result;
            var showScore = document.getElementById('result-score');
            var scores = document.getElementById('score-data').innerText;
            var scoresArray = scores.split(',');
            for(var i=0; i<scoresArray.length; i++){
                scoresArray[i] = scoresArray[i].split(':');
                var dong = result.substr(result.length-scoresArray[i][0].length,scoresArray[i][0].length);
                if(dong === scoresArray[i][0]){
                    if(scoresArray[i][1]!=undefined){
                        showScore.innerText = scoresArray[i][1];
                        var grade = showScore.innerText.substr(0,1);
                        var perc = '';
                        if(grade === '1'){
                            perc = '91%';
                        }else if(grade === '2'){
                            perc = '71%';
                        }else if(grade === '3'){
                            perc = '51%';
                        }else if(grade === '4'){
                            perc = '31%';
                        }else if(grade === '5'){
                            perc = '11%';
                        }
                        document.getElementById('triangle-marker').style.marginLeft=perc;
                    }
                }   
            }

            var eachDetailScores = document.getElementById('detail-data').innerText;
            eachDetailScores = eachDetailScores.replaceAll('&#34','\"');
            eachDetailScores = JSON.parse(eachDetailScores);
            var dataForTargetGraph = eachDetailScores[epMyeonDong];
            var dataForAvgGraph = eachDetailScores[gu];
            if(dataForTargetGraph === undefined || dataForTargetGraph.length < 1){
                info.style.visibility="hidden";
                return alert("결과가 없습니다.");
            }
            for(var i=0; i<dataForTargetGraph.length; i++){
                dataForTargetGraph[i] = parseInt(dataForTargetGraph[i])%50;
            }
            for(var i=0; i<dataForAvgGraph.length; i++){
                dataForAvgGraph[i] = parseInt(dataForAvgGraph[i])%50;
            }
            data = {
                labels: [
                '유동인구',
                '총인구',
                '구매력',
                '영어이익',
                '경쟁업체',
                ],
                datasets: [{
                    label: epMyeonDong,
                    backgroundColor: 'rgb(255, 99, 132,0.2)',
                    borderColor: 'rgb(255, 99, 132)',
                    pointBackgroundColor:'rgb(255,99,132)',
                    pointBorderColor:'#fff',
                    pointHoverBackgroundColor: '#fff',
                    pointHoverBorderColor: 'rgb(255, 99, 132)',
                    data: dataForTargetGraph,
                    fill:true,
                },{
                    label: gu+' 평균 상권',
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgb(54, 162, 235)',
                    pointBackgroundColor: 'rgb(54, 162, 235)',
                    pointBorderColor: '#fff',
                    pointHoverBackgroundColor: '#fff',
                    pointHoverBorderColor: 'rgb(54, 162, 235)',
                    data: dataForAvgGraph,
                    fill:true,
                }]
            };

            myChart.data = data;
            myChart.update();
            

















            ///////////////////////////////////////////////////////////
            if (item.roadAddress) {
                htmlAddresses.push('[도로명 주소] ' + item.roadAddress);
            }
    
            if (item.jibunAddress) {
                htmlAddresses.push('[지번 주소] ' + item.jibunAddress);
            }
    
            infoWindow.setContent([
                '<div style="padding:10px;min-width:200px;line-height:150%;">',
                '<h4 style="margin-top:5px;">검색 주소 : '+ address +'</h4><br />',
                htmlAddresses.join('<br />'),
                '</div>'
            ].join('\n'));
    
            map.setCenter(point);
            infoWindow.open(map, point);
        });
    }
    
    function initGeocoder(cond) { //setting
        if (!map.isStyleMapReady) {
            return;
        }
    
        map.addListener('click', function(e) {
            searchCoordinateToAddress(e.coord);
        });
        var addr = document.getElementById('address');
        var sel  = document.getElementById('select_kind');
        if(cond==0){
            var keyCode = event.keyCode;
            if (keyCode === 13) { // Enter Key
                searchAddressToCoordinate(addr.value);
            }
        }
        if(cond==1){
            console.log(addr.value+", "+sel.value);
            searchAddressToCoordinate(addr.value);
        }
    }
    
    function makeAddress(item) {
        if (!item) {
            return;
        }
    
        var name = item.name,
            region = item.region,
            land = item.land,
            isRoadAddress = name === 'roadaddr';
    
        var sido = '', sigugun = '', dongmyun = '', ri = '', rest = '';
    
        if (hasArea(region.area1)) {
            sido = region.area1.name;
        }
    
        if (hasArea(region.area2)) {
            sigugun = region.area2.name;
        }
    
        if (hasArea(region.area3)) {
            dongmyun = region.area3.name;
        }
    
        if (hasArea(region.area4)) {
            ri = region.area4.name;
        }
    
        if (land) {
            if (hasData(land.number1)) {
                if (hasData(land.type) && land.type === '2') {
                    rest += '산';
                }
    
                rest += land.number1;
    
                if (hasData(land.number2)) {
                    rest += ('-' + land.number2);
                }
            }
    
            if (isRoadAddress === true) {
                if (checkLastString(dongmyun, '면')) {
                    ri = land.name;
                } else {
                    dongmyun = land.name;
                    ri = '';
                }
    
                if (hasAddition(land.addition0)) {
                    rest += ' ' + land.addition0.value;
                }
            }
        }
    
        return [sido, sigugun, dongmyun, ri, rest].join(' ');
    }
    
    function hasArea(area) {
        return !!(area && area.name && area.name !== '');
    }
    
    function hasData(data) {
        return !!(data && data !== '');
    }
    
    function checkLastString (word, lastString) {
        return new RegExp(lastString + '$').test(word);
    }
    
    function hasAddition (addition) {
        return !!(addition && addition.value);
    }
    
    naver.maps.onJSContentLoaded = initGeocoder;
    naver.maps.Event.once(map, 'init_stylemap', initGeocoder);
</script>

<script id="html-component-code">
    function closeInfo(){
        var info = document.getElementById('result-box');
        info.style.visibility="hidden";
    }
</script>
